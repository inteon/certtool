// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: extension_2.5.29.17_subject_alternative_name.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubjectAlternativeNames struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtherNames                 []*AttributeTypeAndValue `protobuf:"bytes,1,rep,name=other_names,json=otherNames,proto3" json:"other_names,omitempty"`
	Rfc_822Names               []string                 `protobuf:"bytes,2,rep,name=rfc_822_names,json=rfc822Names,proto3" json:"rfc_822_names,omitempty"`
	DnsNames                   []string                 `protobuf:"bytes,3,rep,name=dns_names,json=dnsNames,proto3" json:"dns_names,omitempty"`
	X400Addresses              [][]byte                 `protobuf:"bytes,4,rep,name=x400_addresses,json=x400Addresses,proto3" json:"x400_addresses,omitempty"`
	DirectoryNames             []*RDNSequence           `protobuf:"bytes,5,rep,name=directory_names,json=directoryNames,proto3" json:"directory_names,omitempty"`
	EdiPartyNames              []*EDIPartyName          `protobuf:"bytes,6,rep,name=edi_party_names,json=ediPartyNames,proto3" json:"edi_party_names,omitempty"`
	UniformResourceIdentifiers []string                 `protobuf:"bytes,7,rep,name=uniform_resource_identifiers,json=uniformResourceIdentifiers,proto3" json:"uniform_resource_identifiers,omitempty"`
	IpAddresses                []string                 `protobuf:"bytes,8,rep,name=ip_addresses,json=ipAddresses,proto3" json:"ip_addresses,omitempty"`
	RegisteredIds              []*ObjectIdentifier      `protobuf:"bytes,9,rep,name=registered_ids,json=registeredIds,proto3" json:"registered_ids,omitempty"`
}

func (x *SubjectAlternativeNames) Reset() {
	*x = SubjectAlternativeNames{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_2_5_29_17_subject_alternative_name_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectAlternativeNames) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectAlternativeNames) ProtoMessage() {}

func (x *SubjectAlternativeNames) ProtoReflect() protoreflect.Message {
	mi := &file_extension_2_5_29_17_subject_alternative_name_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectAlternativeNames.ProtoReflect.Descriptor instead.
func (*SubjectAlternativeNames) Descriptor() ([]byte, []int) {
	return file_extension_2_5_29_17_subject_alternative_name_proto_rawDescGZIP(), []int{0}
}

func (x *SubjectAlternativeNames) GetOtherNames() []*AttributeTypeAndValue {
	if x != nil {
		return x.OtherNames
	}
	return nil
}

func (x *SubjectAlternativeNames) GetRfc_822Names() []string {
	if x != nil {
		return x.Rfc_822Names
	}
	return nil
}

func (x *SubjectAlternativeNames) GetDnsNames() []string {
	if x != nil {
		return x.DnsNames
	}
	return nil
}

func (x *SubjectAlternativeNames) GetX400Addresses() [][]byte {
	if x != nil {
		return x.X400Addresses
	}
	return nil
}

func (x *SubjectAlternativeNames) GetDirectoryNames() []*RDNSequence {
	if x != nil {
		return x.DirectoryNames
	}
	return nil
}

func (x *SubjectAlternativeNames) GetEdiPartyNames() []*EDIPartyName {
	if x != nil {
		return x.EdiPartyNames
	}
	return nil
}

func (x *SubjectAlternativeNames) GetUniformResourceIdentifiers() []string {
	if x != nil {
		return x.UniformResourceIdentifiers
	}
	return nil
}

func (x *SubjectAlternativeNames) GetIpAddresses() []string {
	if x != nil {
		return x.IpAddresses
	}
	return nil
}

func (x *SubjectAlternativeNames) GetRegisteredIds() []*ObjectIdentifier {
	if x != nil {
		return x.RegisteredIds
	}
	return nil
}

type EDIPartyName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameAssigner *string `protobuf:"bytes,1,opt,name=name_assigner,json=nameAssigner,proto3,oneof" json:"name_assigner,omitempty"`
	PartyName    string  `protobuf:"bytes,2,opt,name=party_name,json=partyName,proto3" json:"party_name,omitempty"`
}

func (x *EDIPartyName) Reset() {
	*x = EDIPartyName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_2_5_29_17_subject_alternative_name_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EDIPartyName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EDIPartyName) ProtoMessage() {}

func (x *EDIPartyName) ProtoReflect() protoreflect.Message {
	mi := &file_extension_2_5_29_17_subject_alternative_name_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EDIPartyName.ProtoReflect.Descriptor instead.
func (*EDIPartyName) Descriptor() ([]byte, []int) {
	return file_extension_2_5_29_17_subject_alternative_name_proto_rawDescGZIP(), []int{1}
}

func (x *EDIPartyName) GetNameAssigner() string {
	if x != nil && x.NameAssigner != nil {
		return *x.NameAssigner
	}
	return ""
}

func (x *EDIPartyName) GetPartyName() string {
	if x != nil {
		return x.PartyName
	}
	return ""
}

var File_extension_2_5_29_17_subject_alternative_name_proto protoreflect.FileDescriptor

var file_extension_2_5_29_17_subject_alternative_name_proto_rawDesc = []byte{
	0x0a, 0x32, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x35, 0x2e,
	0x32, 0x39, 0x2e, 0x31, 0x37, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x6c,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xc7, 0x03, 0x0a, 0x17, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x6c,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x37,
	0x0a, 0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x66, 0x63, 0x5f, 0x38,
	0x32, 0x32, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x66, 0x63, 0x38, 0x32, 0x32, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x6e, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x78, 0x34, 0x30, 0x30,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x0d, 0x78, 0x34, 0x30, 0x30, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12,
	0x35, 0x0a, 0x0f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x44, 0x4e, 0x53, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0f, 0x65, 0x64, 0x69, 0x5f, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x45, 0x44, 0x49, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0d,
	0x65, 0x64, 0x69, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x40, 0x0a,
	0x1c, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x1a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x12, 0x38, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0d, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x49, 0x64, 0x73, 0x22, 0x69, 0x0a, 0x0c,
	0x45, 0x44, 0x49, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0d,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x42, 0x0d, 0x5a, 0x0b, 0x6c, 0x69, 0x62, 0x78, 0x35,
	0x30, 0x39, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_extension_2_5_29_17_subject_alternative_name_proto_rawDescOnce sync.Once
	file_extension_2_5_29_17_subject_alternative_name_proto_rawDescData = file_extension_2_5_29_17_subject_alternative_name_proto_rawDesc
)

func file_extension_2_5_29_17_subject_alternative_name_proto_rawDescGZIP() []byte {
	file_extension_2_5_29_17_subject_alternative_name_proto_rawDescOnce.Do(func() {
		file_extension_2_5_29_17_subject_alternative_name_proto_rawDescData = protoimpl.X.CompressGZIP(file_extension_2_5_29_17_subject_alternative_name_proto_rawDescData)
	})
	return file_extension_2_5_29_17_subject_alternative_name_proto_rawDescData
}

var file_extension_2_5_29_17_subject_alternative_name_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_extension_2_5_29_17_subject_alternative_name_proto_goTypes = []interface{}{
	(*SubjectAlternativeNames)(nil), // 0: SubjectAlternativeNames
	(*EDIPartyName)(nil),            // 1: EDIPartyName
	(*AttributeTypeAndValue)(nil),   // 2: AttributeTypeAndValue
	(*RDNSequence)(nil),             // 3: RDNSequence
	(*ObjectIdentifier)(nil),        // 4: ObjectIdentifier
}
var file_extension_2_5_29_17_subject_alternative_name_proto_depIdxs = []int32{
	2, // 0: SubjectAlternativeNames.other_names:type_name -> AttributeTypeAndValue
	3, // 1: SubjectAlternativeNames.directory_names:type_name -> RDNSequence
	1, // 2: SubjectAlternativeNames.edi_party_names:type_name -> EDIPartyName
	4, // 3: SubjectAlternativeNames.registered_ids:type_name -> ObjectIdentifier
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_extension_2_5_29_17_subject_alternative_name_proto_init() }
func file_extension_2_5_29_17_subject_alternative_name_proto_init() {
	if File_extension_2_5_29_17_subject_alternative_name_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_extension_2_5_29_17_subject_alternative_name_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectAlternativeNames); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extension_2_5_29_17_subject_alternative_name_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EDIPartyName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_extension_2_5_29_17_subject_alternative_name_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_extension_2_5_29_17_subject_alternative_name_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_extension_2_5_29_17_subject_alternative_name_proto_goTypes,
		DependencyIndexes: file_extension_2_5_29_17_subject_alternative_name_proto_depIdxs,
		MessageInfos:      file_extension_2_5_29_17_subject_alternative_name_proto_msgTypes,
	}.Build()
	File_extension_2_5_29_17_subject_alternative_name_proto = out.File
	file_extension_2_5_29_17_subject_alternative_name_proto_rawDesc = nil
	file_extension_2_5_29_17_subject_alternative_name_proto_goTypes = nil
	file_extension_2_5_29_17_subject_alternative_name_proto_depIdxs = nil
}
